summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years")
theme(axis.text = element_blank(), axis.ticks.x = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years")
theme(axis.text = element_blank(), axis.ticks = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years")
theme(axis.text = element_blank(), axis.text.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years")
theme(axis.text = element_blank(), axis.ticks = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years")
theme(axis.ticks = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years")
theme(axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.ticks. = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.ticks = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col() +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col(width=0.5) +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col(width=0.5, fill = "lightblue", color="black") +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col(width=0.5, fill = "lightblue", color="white") +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col(width=0.5, fill = "lightblue", color="black") +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
var_pre2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year < 2021)
var_2021 = american_dists %>%
group_by(Year) %>%
summarize(dists = var(dist_madison/1000)) %>%
filter(Year >= 2021)
years = c("2010-2021", "2021-2023")
avgs = c(mean(var_pre2021$dists), mean(var_2021$dists))
ggplot(data.frame(years, avgs), aes(x=years, y=avgs)) +
geom_col(width=0.4, fill = "lightblue", color="black") +
ylab("Average Variance (km)") +
xlab("Years") +
theme(axis.text.y = element_blank(), axis.ticks.y = element_blank())
library(rvest)
library(tidyverse)
sports = c("baseball",
"softball",
"mens-basketball",
"womens-basketball",
"cross-country",
"football",
"mens-golf",
"womens-golf",
"mens-swimming-and-diving",
"womens-swimming-and-diving",
"womens-gymnastics",
"womens-soccer",
"track-and-field",
"wrestling",
"womens-tennis",
"womens-volleyball")
types = c(0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0)
sports_df = data.frame(Sport = sports, Type = types)
html = read_html("https://mutigers.com/sports/football/roster/2023")
tbls = html %>% html_table
tbls[3]
View(html)
grep
cnames = c("Name, City, Hometown/Highschool")
cnames
grep("hometown", cnames)
grep("[hH]ometown")
grep("[hH]ometown", cnames)
grep("Hometown", cnames)
grep("[hH]ometown", "Hometown")
grep("[hH]ometown", "Hometown/asdfjasdfijasdjfadsf")
grep("[hH]ometown", "Hometon/asdfjasdfijasdjfadsf")
cnames.match("Hometown")
match(cnames, "Hometown")
match("Hometown", cnames)
"[hH"
"[hH]ometown" %in% cnames
"Hometown" in cnames
"Hometown" %in% cnames
html
View(html)
sports_df
sports_df["Sport"]
sports_df[Sport]
sports_df$Sport
sports_df["Sport"]
list(sports_df["Spoprt"])
list(sports_df["Sport"])
c(sports_df["Sport"])
# Scraping
BASE_URL = "https://mutigers.com"
years = 2013:2023
college_df = data.frame()
for (i in 1:nrow(sports_df)) {
sport = sports_df$Sport[i]
for (y in 1:length(years)) {
year = years[y]
if (sports_df$Type[i] == 1) {
next_year = as.character(years[y] + 1)
year_str = paste(years[y], "-", substr(next_year, nchar(next_year) -1, nchar(next_year)), sep="")
}
else {
year_str = as.character(years[y])
}
url = paste(BASE_URL, "/sports/", sport, "/roster/", year_str, sep="")
tables = read_html(url) %>% html_table()
roster = data.frame(tables[3])
roster$Year = rep(year, nrow(roster))
roster$Sport = rep(sport, nrow(roster))
for (i in 1:length(colnames(roster))){
if (grep("[hH]ometown", colnames(roster)[i]) == 1){
roster$Hometown = c(roster[colnames(roster)[i]])
}
}
print(roster)
}
}
cnames
grep("[hH]ometown", cnames)
grep("[hH]ometown", cnames[3])
grep("[hH]ometown", cnames[2])
cnames[2]
cnames
cnames[1]
cnames[1][1]
cnames
cnames = c("Name", "City", "Hometown/Highschool")
cnames
grep("[hH]ometown", cnames)
grep("[hH]ometown", cnames[3])
grep("[hH]ometown", cnames[2])
grep("[hH]ometown", cnames[1])
grep("[hH]ometown", cnames)
grep("[hH]ometown", cnames[3])
colnames(sports_df)
colnames(sports_df[1])
colnames(sports_df)[1]
length(colnames(sports_df))
# Scraping
BASE_URL = "https://mutigers.com"
years = 2013:2023
college_df = data.frame()
for (i in 1:nrow(sports_df)) {
sport = sports_df$Sport[i]
for (y in 1:length(years)) {
year = years[y]
if (sports_df$Type[i] == 1) {
next_year = as.character(years[y] + 1)
year_str = paste(years[y], "-", substr(next_year, nchar(next_year) -1, nchar(next_year)), sep="")
}
else {
year_str = as.character(years[y])
}
url = paste(BASE_URL, "/sports/", sport, "/roster/", year_str, sep="")
tables = read_html(url) %>% html_table()
roster = data.frame(tables[3])
roster$Year = rep(year, nrow(roster))
roster$Sport = rep(sport, nrow(roster))
for (i in 1:length(colnames(roster))){
if (grep("[hH]ometown", colnames(roster)[i]) > 0){
roster$Hometown = c(roster[colnames(roster)[i]])
}
}
print(roster)
}
}
grep("[hH]ometown", cnames)
grep("[hH]ometown", cnames[1])
is.null(grep("[hH]ometown", cnames[1]))
length(grep("[hH]ometown", cnames[1]))
# Scraping
BASE_URL = "https://mutigers.com"
years = 2013:2023
college_df = data.frame()
for (i in 1:nrow(sports_df)) {
sport = sports_df$Sport[i]
for (y in 1:length(years)) {
year = years[y]
if (sports_df$Type[i] == 1) {
next_year = as.character(years[y] + 1)
year_str = paste(years[y], "-", substr(next_year, nchar(next_year) -1, nchar(next_year)), sep="")
}
else {
year_str = as.character(years[y])
}
url = paste(BASE_URL, "/sports/", sport, "/roster/", year_str, sep="")
tables = read_html(url) %>% html_table()
roster = data.frame(tables[3])
roster$Year = rep(year, nrow(roster))
roster$Sport = rep(sport, nrow(roster))
for (i in 1:length(colnames(roster))){
if (length(grep("[hH]ometown", colnames(roster)[i])) > 0){
roster$Hometown = c(roster[colnames(roster)[i]])
}
}
print(roster)
}
}
# Scraping
BASE_URL = "https://mutigers.com"
years = 2013:2023
college_df = data.frame()
for (i in 1:nrow(sports_df)) {
sport = sports_df$Sport[i]
for (y in 1:length(years)) {
year = years[y]
if (sports_df$Type[i] == 1) {
next_year = as.character(years[y] + 1)
year_str = paste(years[y], "-", substr(next_year, nchar(next_year) -1, nchar(next_year)), sep="")
}
else {
year_str = as.character(years[y])
}
url = paste(BASE_URL, "/sports/", sport, "/roster/", year_str, sep="")
tables = read_html(url) %>% html_table()
roster = data.frame(tables[3])
roster$Year = rep(year, nrow(roster))
roster$Sport = rep(sport, nrow(roster))
for (i in 1:length(colnames(roster))){
if (length(grep("[hH]ometown", colnames(roster)[i])) > 0){
roster$Hometown = as.character(c(roster[colnames(roster)[i]]))
}
}
print(roster)
}
}
# Scraping
BASE_URL = "https://mutigers.com"
years = 2013:2023
college_df = data.frame()
for (i in 1:nrow(sports_df)) {
sport = sports_df$Sport[i]
for (y in 1:length(years)) {
year = years[y]
if (sports_df$Type[i] == 1) {
next_year = as.character(years[y] + 1)
year_str = paste(years[y], "-", substr(next_year, nchar(next_year) -1, nchar(next_year)), sep="")
}
else {
year_str = as.character(years[y])
}
url = paste(BASE_URL, "/sports/", sport, "/roster/", year_str, sep="")
tables = read_html(url) %>% html_table()
roster = data.frame(tables[3])
roster$Year = rep(year, nrow(roster))
roster$Sport = rep(sport, nrow(roster))
for (i in 1:length(colnames(roster))){
if (length(grep("[hH]ometown", colnames(roster)[i])) > 0){
roster$Hometown = roster[[colnames(roster)[i]]]
}
}
print(roster)
}
}
hths = "Chesterfield, Mo. / Marquette"
hths
strsplit(hths, "/")
type(strsplit(hths, "/"))
typeof(strsplit(hths, "."))
/
strsplit("Chesterfield, Mo.", "/")
strsplit(hths, "/")[1]
strsplit(hths, "/")[1][1]
[1]
strsplit(hths, "/")
str_split(hths, "/")
str_split1(hths, "/")
str_split_1(hths, ".")
str_split_1(hths, "/")
str_split_1(hths, "/")[1]
str_split_1("Chesterfield, Mo.", "/")
str_trim(str_split_1(hths, "/")[1])
help.start()
setwd("~/Personal/projects/current/uw-data-contest/lsu")
test = read_html("https://lsusports.net/sports/bsb/roster/season/2021/") %>% html_table()
library(rvest)
library(tidyverse)
test = read_html("https://lsusports.net/sports/bsb/roster/season/2021/") %>% html_table()
test
test[1]
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
test = read_html("https://lsusports.net/sports/bvb/roster/season/2015/") %>% html_table()
test
test = read_html("https://lsusports.net/sports/bvb/roster/season/2014/") %>% html_table()
test
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
View(sports_df)
View(sports_df)
View(sports_df)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/lsu/lsu.R", echo=TRUE)
