library(rvest)
library(tidyverse)
sports = c("baseball",
"softball",
"mens-basketball",
"womens-basketball",
"cross-country",
"football",
"mens-golf",
"womens-golf",
"mens-swimming-and-diving",
"womens-swimming-and-diving",
"womens-gymnastics",
"womens-soccer",
"track-and-field",
"wrestling",
"womens-tennis",
"womens-volleyball")
types = c(0,0,1,1,0,0,1,1,0,0,0,0,0,1,1,0)
test = read_html("https://ukathletics.com/sports/baseball/roster/season/2020/") %>% html_table()
test
sports = c("baseball",
"softball",
"mbball",
"wbball",
"cross",
"football",
"mgolf",
"wgolf",
"swimming",
"wgym",
"msoc",
"wsoc",
"track",
"wrestling",
"mten",
"wten",
"wvball"
)
length(sports)
length(sports)
library(rvest)
library(tidyverse)
sports = c("baseball",
"softball",
"mbball",
"wbball",
"cross",
"football",
"mgolf",
"wgolf",
"swimming",
"wgym",
"msoc",
"wsoc",
"track",
"mten",
"wten",
"wvball"
)
length(sports)
length(types)
library(rvest)
library(tidyverse)
sports = c("baseball",
"softball",
"mbball",
"wbball",
"cross",
"football",
"mgolf",
"wgolf",
"swimming",
"wgym",
"msoc",
"wsoc",
"track",
"mten",
"wten",
"wvball"
)
types = c(0,0,1,1,0,0,1,1,1,0,0,0,1,1,1,0)
length(types)
length(types) == length(sports)
test = read_html("https://ukathletics.com/sports/swimming/roster/") %>% html_table()
test
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
View(college_df)
View(college_df)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
test = read_html("https://ukathletics.com/sports/swimming/roster/") %>% html_table()
test = read_html("https://ukathletics.com/sports/swimming/roster/season/2014-15") %>% html_table()
test
test = read_html("https://ukathletics.com/sports/swimming/roster/season/2015-16") %>% html_table()
test
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
install.packages(c("askpass", "bit", "blob", "boot", "broom", "bslib", "cachem", "callr", "class", "cli", "clock", "cluster", "codetools", "collections", "colorspace", "commonmark", "cpp11", "crayon", "crosstalk", "curl", "cyclocomp", "data.table", "dbplyr", "digest", "dplyr", "dqrng", "dtplyr", "evaluate", "fansi", "fontawesome", "foreign", "fs", "future", "future.apply", "gargle", "ggmap", "ggplot2", "ggrepel", "glmnet", "googledrive", "googlesheets4", "gt", "gtable", "gtExtras", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "languageserver", "lattice", "lava", "leaflet", "leaflet.providers", "lemon", "lifecycle", "lintr", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "nlme", "nnet", "openssl", "parallelly", "pkgload", "plyr", "png", "prettyunits", "pROC", "processx", "prodlim", "progressr", "ps", "purrr", "R.utils", "ragg", "raster", "RcppArmadillo", "RcppEigen", "RcppTOML", "readxl", "recipes", "rematch", "remotes", "reticulate", "Rfast", "RgoogleMaps", "rlang", "rmarkdown", "roxygen2", "rpart", "rprojroot", "RSQLite", "rstudioapi", "sass", "shiny", "snakecase", "sp", "spatial", "stringi", "stringr", "styler", "survival", "svglite", "sys", "systemfonts", "terra", "textshaping", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridisLite", "vroom", "webshot", "withr", "xfun", "XML", "xml2", "yaml"))
install.packages(c("askpass", "bit", "blob", "boot", "broom", "bslib", "cachem", "callr", "class", "cli", "clock", "cluster", "codetools", "collections", "colorspace", "commonmark", "cpp11", "crayon", "crosstalk", "curl", "cyclocomp", "data.table", "dbplyr", "digest", "dplyr", "dqrng", "dtplyr", "evaluate", "fansi", "fontawesome", "foreign", "fs", "future", "future.apply", "gargle", "ggmap", "ggplot2", "ggrepel", "glmnet", "googledrive", "googlesheets4", "gt", "gtable", "gtExtras", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "languageserver", "lattice", "lava", "leaflet", "leaflet.providers", "lemon", "lifecycle", "lintr", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "nlme", "nnet", "openssl", "parallelly", "pkgload", "plyr", "png", "prettyunits", "pROC", "processx", "prodlim", "progressr", "ps", "purrr", "R.utils", "ragg", "raster", "RcppArmadillo", "RcppEigen", "RcppTOML", "readxl", "recipes", "rematch", "remotes", "reticulate", "Rfast", "RgoogleMaps", "rlang", "rmarkdown", "roxygen2", "rpart", "rprojroot", "RSQLite", "rstudioapi", "sass", "shiny", "snakecase", "sp", "spatial", "stringi", "stringr", "styler", "survival", "svglite", "sys", "systemfonts", "terra", "textshaping", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridisLite", "vroom", "webshot", "withr", "xfun", "XML", "xml2", "yaml"))
install.packages(c("askpass", "bit", "blob", "boot", "broom", "bslib", "cachem", "callr", "class", "cli", "clock", "cluster", "codetools", "collections", "colorspace", "commonmark", "cpp11", "crayon", "crosstalk", "curl", "cyclocomp", "data.table", "dbplyr", "digest", "dplyr", "dqrng", "dtplyr", "evaluate", "fansi", "fontawesome", "foreign", "fs", "future", "future.apply", "gargle", "ggmap", "ggplot2", "ggrepel", "glmnet", "googledrive", "googlesheets4", "gt", "gtable", "gtExtras", "haven", "highr", "hms", "htmltools", "htmlwidgets", "httr", "isoband", "KernSmooth", "knitr", "labeling", "languageserver", "lattice", "lava", "leaflet", "leaflet.providers", "lemon", "lifecycle", "lintr", "lubridate", "markdown", "MASS", "Matrix", "mgcv", "nlme", "nnet", "openssl", "parallelly", "pkgload", "plyr", "png", "prettyunits", "pROC", "processx", "prodlim", "progressr", "ps", "purrr", "R.utils", "ragg", "raster", "RcppArmadillo", "RcppEigen", "RcppTOML", "readxl", "recipes", "rematch", "remotes", "reticulate", "Rfast", "RgoogleMaps", "rlang", "rmarkdown", "roxygen2", "rpart", "rprojroot", "RSQLite", "rstudioapi", "sass", "shiny", "snakecase", "sp", "spatial", "stringi", "stringr", "styler", "survival", "svglite", "sys", "systemfonts", "terra", "textshaping", "tinytex", "tzdb", "utf8", "uuid", "V8", "vctrs", "viridisLite", "vroom", "webshot", "withr", "xfun", "XML", "xml2", "yaml"))
setwd("~/Personal/projects/current/uw-data-contest/tennessee")
library(rvest)
library(tidyverse)
sports = c("baseball",
"softball",
"mens-basketball",
"womens-basketball",
"cross-country",
"football",
"mens-golf",
"womens-golf",
"swimming-and-diving",
"womens-soccer",
"track-and-field",
"mens-tennis",
"womens-tennis",
"womens-volleyball",
"womens-rowing")
length(sports)
sounds <- c(
"cat"="meow",
"dog"="woof",
"horse"="neigh"
)
sounds
data.frame(sounds)
View(data.frame(sounds))
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"swimming-and-diving"=1,
"womens-soccer"=0,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-volleyball"=0,
"womens-rowing"=1)
sports_df = data.frame(sports)
View(sports_df)
sportts
sports
sports[1]
names(sports)
sounds
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"swimming-and-diving"=1,
"womens-soccer"=0,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-volleyball"=0,
"womens-rowing"=1)
types = c()
for (thing in sports) {
types = c(types, sports[thing])
}
sports_df = data.frame(names(sports), types)
types = c()
for (thing in sports) {
types = c(types, sports[thing])
}
types
for (thing in sports) {}
for (thing in sports) {
types = c(types, sports[thing])
}
types
types = c()
for (thing in sports) {
types = c(types, sports[thing])
}
types
types = c()
for (thing in sports) {
types = c(types, thing)
}
types
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"swimming-and-diving"=1,
"womens-soccer"=0,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-volleyball"=0,
"womens-rowing"=1)
types = c()
for (thing in sports) {
types = c(types, thing)
}
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"swimming-and-diving"=1,
"womens-soccer"=0,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-volleyball"=0,
"womens-rowing"=1)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(names(sports), types)
View(sports_df)
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"swimming-and-diving"=1,
"womens-soccer"=0,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-volleyball"=0,
"womens-rowing"=1)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(names(sports), types)
test = read_html("https://utsports.com/sports/womens-rowing/roster") %>% html_table()
testg
testg
test = read_html("https://utsports.com/sports/womens-rowing/roster") %>% html_table()
test
test = read_html("https://utsports.com/sports/womens-rowing/roster")
test
test %>% html_table()
test = read_html("https://utsports.com/sports/womens-rowing/roster/2023-24")
test %>% html_table()
https://utsports.com/sports/football/roster
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"swimming-and-diving"=1,
"womens-soccer"=0,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-volleyball"=0,
"womens-rowing"=1)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(names(sports), types)
test = read_html("https://utsports.com/sports/football/roster") %>% html_table()
test
read_html("https://utsports.com/sports/football/roster")
test = read_html("https://utsports.com/sports/football/roster")
test %>% html_tables()
test %>% html_table()
test
test %>% html_element("table")
test %>% html_element("h1")
test %>% html_element("h2")
test %>% html_element("h3")
test %>% html_element("h5")
test %>% html_element("h4")
setwd("~/Personal/projects/current/uw-data-contest/florida")
getwd()
length(sports)
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"mens-swimming-and-diving"=1,
"womens-swimming-and-diving"=1,
"womens-soccer"=0,
"womens-gymnastics"=1,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-lacrosse"=0,
"womens-volleyball"=0,
)
sports
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"mens-swimming-and-diving"=1,
"womens-swimming-and-diving"=1,
"womens-soccer"=0,
"womens-gymnastics"=1,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-lacrosse"=0,
"womens-volleyball"=0,
)
source("~/Personal/projects/current/uw-data-contest/florida/florida.R", echo=TRUE)
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"mens-swimming-and-diving"=1,
"womens-swimming-and-diving"=1,
"womens-soccer"=0,
"womens-gymnastics"=1,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-lacrosse"=0,
"womens-volleyball"=0
)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(names(sports), types)
length(sports)
View(sports_df)
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"mens-swimming-and-diving"=1,
"womens-swimming-and-diving"=1,
"womens-soccer"=0,
"womens-gymnastics"=1,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-lacrosse"=0,
"womens-volleyball"=0
)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(Sport = names(sports), Type = types)
View(sports_df)
test = read_html("https://floridagators.com/sports/womens-soccer/roster")
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"mens-swimming-and-diving"=1,
"womens-swimming-and-diving"=1,
"womens-soccer"=0,
"womens-gymnastics"=1,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-lacrosse"=0,
"womens-volleyball"=0
)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(Sport = names(sports), Type = types)
test %>% html_table
test %>% html_table()
source("~/Personal/projects/current/uw-data-contest/florida/florida.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/florida/florida.R", echo=TRUE)
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mens-basketball"=1,
"womens-basketball"=1,
"cross-country"=1,
"football"=0,
"mens-golf"=1,
"womens-golf"=1,
"mens-swimming-and-diving"=1,
"womens-swimming-and-diving"=1,
"womens-soccer"=0,
"womens-gymnastics"=1,
"track-and-field"=1,
"mens-tennis"=1,
"womens-tennis"=1,
"womens-lacrosse"=0,
"womens-volleyball"=0
)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(Sport = names(sports), Type = types)
test = read_html("https://georgiadogs.com/sports/football/roster") %>% html_table()
test
test = read_html("https://gamecocksonline.com/sports/football/roster/") %>% html_table()
test
setwd("~/Personal/projects/current/uw-data-contest/usc")
test = read_html("https://12thman.com/sports/football/roster") %>% html_table()
test
test = read_html("https://olemisssports.com/sports/football/roster") %>% html_table()
test
test = read_html("https://vucommodores.com/sports/baseball/roster/") %>% html_table()
test
library(rvest)
library(tidyverse)
sports = c("baseball"=0,
"softball"=0,
"mbball"=1,
"wbball"=1,
"wcross"=0,
"football"=0,
"mgolf"=1,
"wgolf"=1,
"swimming"=1,
"msoc"=0,
"wsoc"=0,
"track"=1,
"mten"=1,
"wten"=1,
"wvball"=0
)
types = c()
for (thing in sports) {
types = c(types, thing)
}
sports_df = data.frame(Sport = names(sports), Type = types)
length(sports)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/kentucky/kentucky.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/usc/usc.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/usc/usc.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/usc/usc.R", echo=TRUE)
setwd("~/Personal/projects/current/uw-data-contest/vandy")
test = read_html("https://vucommodores.com/sports/baseball/roster/") %>% html_table()
test
source("~/Personal/projects/current/uw-data-contest/vandy/vandy.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/vandy/vandy.R", echo=TRUE)
source("~/Personal/projects/current/uw-data-contest/vandy/vandy.R", echo=TRUE)
View(college_df)
View(roster)
View(college_df)
